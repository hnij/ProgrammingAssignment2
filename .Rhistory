add2(3,5)
add(4.4)
add2(2,2)
add2 <- function(x,y){
x+y
}
add2 (2,2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
columnmean(airquality)
install.packages("swirl")
library(swirl)
swirl()
q()
cube <- function(x, n) {
x^3
}
cube(3)
x<-1:10
if(x > 5){
x <-0
}
f<-function(x){
g <- function(y) {
y+z
}
z <-4
x + g(x)}
z <-10
f(3)
f(3)
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
columnmean(airquality)
columnmean <- function(x, removeNA=TRUE){
nc <-ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i]<- mean(x[, i], na.rm=removeNA)
}
means
}
columnmean(airquality)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
nc <-ncol(pollutant)
means <- numeric(nc)
for(i in 1:nc){
means[i]<- mean(pollutant[, i], na.rm=TRUE)
}
means
}
pollutantmean(C:\all\MOOC\coursera ds\R\specdata, sulfate)
pollutantmean(C:/all/MOOC/coursera ds/R/specdata, sulfate)
pollutantmean("C:/all/MOOC/coursera ds/R/specdata", sulfate)
?nrow
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
nr <-nrow(pollutant)
means <- numeric(nr)
for(i in 1:nr){
means[i]<- mean(pollutant[, i], na.rm=TRUE)
}
means
}
pollutantmean(C:\all\MOOC\coursera ds\R\specdata, sulfate)
pollutantmean("C:/all/MOOC/coursera ds/R/specdata", sulfate)
pollutantmean("C:/all/MOOC/coursera ds/R/specdata", "sulfate")
swirl()
library(swirl)
rm(list=ls())
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <-sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4)+c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
testpolmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in 1:4) {
dat <- rbind(dat, read.csv(files_list[1]))
}
mean(files_list[[pollutant]], na.rm=TRUE)
}
source('~/colleague.R')
pollutionmean("specdata","sulfate", 23)
testpolmean("specdata","sulfate", 23)
source('C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
setwd("C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2")
A<-matrix(c(1,0,0,0,1,0,0,0,1), 3,3)
AI<-solve(A)
A
AI
A<-matrix(c(1,2,2,0,1,0,0,0,1), 3,3)
A
AI
AI<-solve(A)
AI
A
AI
cacheSolve(A)
source('C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
cachesolve(A)
cacheSolve(A)
a$get()
A$get()
A[, get]
A[, get()]
A[, "get()"]
source('C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
A
B<-makeCacheMatrix(A)
B
cacheSolve(b)
cacheSolve(B)
cacheSolve(B)
cacheSolve(B)
mat <- matrix(1:4,2,2)
solve(mat)
matrixObject <- makeCacheMatrix(mat)
cacheSolve(matrixObject)
cacheSolve(matrixObject)
source('C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Gebruiker/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
